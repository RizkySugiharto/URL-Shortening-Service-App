import{API_BASE,API_VERSION}from "./config.js";const urlForm=document.getElementById('urlForm');const urlInput=document.getElementById('urlInput');const urlError=document.getElementById('urlError');const successResult=document.getElementById('successResult');const errorResult=document.getElementById('errorResult');const shortenedUrl=document.getElementById('shortenedUrl');const originalUrl=document.getElementById('originalUrl');const historyList=document.getElementById('historyList');const loadingIndicator=document.getElementById('loadingIndicator');document.addEventListener('DOMContentLoaded',function(){loadHistory()});function showUrlError(message){urlError.textContent=message;urlError.classList.remove('hidden')}
function clearUrlError(){urlError.textContent='';urlError.classList.add('hidden')}
function showSuccess(original,shortCode){originalUrl.textContent=original;originalUrl.href=original;shortenedUrl.textContent=`${API_BASE}/${shortCode}`;shortenedUrl.href=`${API_BASE}/${shortCode}`;successResult.classList.remove('hidden')}
function showError(message){errorResult.textContent=message;errorResult.classList.remove('hidden')}
function showLoading(){loadingIndicator.classList.remove('hidden')}
function hideLoading(){loadingIndicator.classList.add('hidden')}
function isValidUrl(url){try{new URL(url);return!0}catch(_){return!1}}
function addToHistory(shortCode,original){const listItem=document.createElement('li');listItem.innerHTML=`<a href="${API_BASE + '/' + shortCode}" target="_blank">${shortCode}</a> - <a href="${original}" target="_blank">Original</a>`;historyList.appendChild(listItem)}
urlForm.addEventListener('submit',async function(e){e.preventDefault();const destination=urlInput.value.trim();clearUrlError();successResult.classList.add('hidden');errorResult.classList.add('hidden');if(!isValidUrl(destination)){showUrlError('Please enter a valid URL');return}
showLoading();try{const formData=new URLSearchParams();formData.append('destination',destination);const response=await fetch(`${API_BASE}/${API_VERSION}/urls/save`,{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded','x-user-id':getUserId()},body:formData});if(response.status!==201){throw new Error(`HTTP error! status: ${response.status}`)}
const data=await response.json();const shortCode=data.source;if(shortCode){showSuccess(destination,shortCode);addToHistory(shortCode,destination);urlInput.value='';saveToHistory(shortCode,destination)}else{throw new Error('Invalid response from server')}}catch(err){console.error('Error shortening URL:',err);showError(err.message||'Failed to shorten URL. Please try again.')}finally{hideLoading()}});function getUserId(){let userId=localStorage.getItem('user-id');if(userId)return userId;userId=Date.now();localStorage.setItem('user-id',userId);return userId}
function loadHistory(){const saved=localStorage.getItem('url-history');if(!saved)return;const urlHistory=JSON.parse(saved);for(const key in urlHistory){addToHistory(key,urlHistory[key])}}
function saveToHistory(shortCode,original){const saved=localStorage.getItem('url-history')??'{}';if(!saved){localStorage.setItem('url-history',JSON.stringify({}))};let urlHistory=JSON.parse(saved);urlHistory[shortCode]=original;localStorage.setItem('url-history',JSON.stringify(urlHistory))}